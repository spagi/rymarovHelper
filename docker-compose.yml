services:
  api_nginx:
    image: nginx:alpine
    container_name: rymarov_nginx
    restart: unless-stopped
    ports:
      - "8888:80" # Nginx bude poslouchat na portu 8000
    volumes:
      - ./app/backend:/var/www/html # Mapuje kód
      - ./docker/api/nginx.conf:/etc/nginx/conf.d/default.conf # Mapuje naši Nginx konfiguraci
    depends_on:
      - api_php # Závisí na
      - chroma
  api_php:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: rymarov_php
    restart: unless-stopped
    depends_on:
      - db
      - chroma
    volumes:
      - ./app/backend:/var/www/html
#    user: "${UID}:${GID}"
    environment:
      # Předáme databázové údaje z kořenového .env do kontejneru
      DATABASE_URL: "mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}?serverVersion=8.0&charset=utf8mb4"
      # Můžeme předat i další proměnné, které Symfony potřebuje
      APP_SECRET: '${APP_SECRET}'
      APP_ENV: dev
      CORS_ALLOW_ORIGIN: '${CORS_ALLOW_ORIGIN}'
      JWT_PASSPHRASE: '${JWT_PASSPHRASE}'
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: rymarov_fe
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend:/app/frontend
      - /app/frontend/node_modules
    environment:
        - API_URL_SERVER=${API_URL_SERVER}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
        - api_nginx
  chroma:
    image: chromadb/chroma:latest
    container_name: rymarov_chroma
    ports:
      # Vystavíme port 8000 ven, abychom mohli přistupovat k jejímu UI/API
      - "8000:8000"
    volumes:
      # Uložíme data z vektorové databáze do Docker volume, aby přežila restart
      - chroma_data:/chroma/.chroma/index
    restart: unless-stopped
  db:
    image: mysql:8.0
    container_name: rymarov_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:
  chroma_data: